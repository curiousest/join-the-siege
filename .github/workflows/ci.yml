name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Build Docker image
      run: docker build -t join-the-siege:test .

    - name: Run unit tests
      run: |
        docker run join-the-siege:test pytest -v tests/ --ignore=tests/test_openai_clf.py

  deploy:
    # TODO add secrets to Github Actions, set up IAM, etc.
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'  # Only deploy on main branch

    steps:
    - uses: actions/checkout@v4

    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for Artifact Registry
      run: |
        gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev

    - name: Build and Push Docker image
      run: |
        docker build -t ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/join-the-siege/join-the-siege:latest .
        docker push ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/join-the-siege/join-the-siege:latest

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: ./terraform
      env:
        TF_VAR_project_id: ${{ vars.PROJECT_ID }}
        TF_VAR_region: ${{ vars.REGION }}
      run: terraform plan

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      working-directory: ./terraform
      env:
        TF_VAR_project_id: ${{ vars.PROJECT_ID }}
        TF_VAR_region: ${{ vars.REGION }}
      run: terraform apply -auto-approve